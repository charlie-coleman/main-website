function create(){function t(){$("#draw_speed").val(speed),$("#size").val(size),$("#start_angle").val(start_angle),$("#width").val(standard_width),$("#angle").val(angle),$("#level").val(level),$("#constants").val(constants),$("#axiom").val(axiom),$("#rainbow").prop("checked",rainbow),$("#center").prop("checked",center),constants=$("#constants").val(),$("#draw_end").prop("checked",!draw_end),$(".rule").remove();for(var t=0;t<constants.length;t++){c=constants[t],$("#rules").append("<div class='rule' id='"+c+"'>"+c+"<input class='inp' id='"+c+"'></div>");var e="#rules #"+constants[t];$(e).val(rules[t])}}canvas=document.getElementById("lsystem_canvas"),ctx=canvas.getContext("2d"),canvas.width=$(window).width(),canvas.height=$(window).height(),ctx.fillStyle=bg_color,ctx.fillRect(0,0,canvas.width,canvas.height),mid_x=canvas.width/2,mid_y=canvas.height/2,ctx.strokeStyle=start_color,ctx.lineWidth=width,ctx.lineCap="square",ctx.translate(.5,.5),$("#restart").click(restart),$(".examp_button").each(function(e,a){$(this).on("click",function(){canvas.width=$(window).width(),canvas.height=$(window).height(),ctx.fillStyle=bg_color,ctx.fillRect(0,0,canvas.width,canvas.height),ctx.strokeStyle=start_color,ctx.translate(.5,.5),size=parseInt(examp_size[e]),width=parseInt(examp_width[e]),start_angle=parseFloat(examp_start_angle[e]),angle=parseFloat(examp_angle[e]),level=parseInt(examp_level[e]),constants=examp_constants[e],axiom=examp_axiom[e],rules=examp_rules[e],draw_end=examp_draw_end[e],t(),rainbow=!0,curve=new LSystemConstruct(ctx,constants,axiom,size,start_angle,angle,mid_x,mid_y,rules,draw_end),curve.create(),start=performance.now(),$("#restart").text("Calculating..."),curve_chosen=!0,centered=!1})}),$("#inputs").focusin(function(t){$("#inputs").css("opacity",1)}),$("#inputs").focusout(function(t){$("#inputs").css("opacity",.07)});var e=$("#dl");e.click(function(){var t=canvas.toDataURL("image/png");this.href=t.replace(/^data:image\/[^;]/,"data:application/octet-stream")}),$("#constants").bind("input",function(){constants=$("#constants").val(),$(".rule").remove();for(var t=0;t<constants.length;t++){var e="";rules.length>t&&(e=rules[t]),$("#rules").append("<div class='rule' id='"+constants[t]+"'>"+constants[t]+"<input class='inp' id='"+constants[t]+"' value='"+e+"'></div>")}}),$("#center").change(function(){center=$("#center").prop("checked"),centered=!1}),canvas.onmousedown=function(t){center||(mid_x=parseInt(t.x),mid_y=parseInt(t.y))}}function arraysEqual(t,e){if(t===e)return!0;if(null==t||null==e)return!1;if(t.length!=e.length)return!1;for(var a=0;a<t.length;++a)if(t[a]!==e[a])return!1;return!0}function update(){if(curve_chosen&&!curve.created)var t=500;else if(curve_chosen&&center&&!centered)var t=1e4;else var t=speed;for(var e=0;t>e;e++)if(curve_chosen&&curve.created&&"Calculating..."==$("#restart").text())center&&!centered?$("#restart").text("Centering..."):$("#restart").text("Drawing...");else if(curve_chosen&&curve.created&&centered&&"Centering..."==$("#restart").text())$("#restart").text("Drawing...");else if(curve_chosen&&curve.created&&curve.i<=curve.axiom.length)curve.draw(ctx),ctx.stroke(),center&&!centered&&ctx.fillRect(0,0,canvas.width,canvas.height),curve.i+=1;else{if(!curve_chosen||curve.created){if($("#restart").text("Restart"),curve_chosen&&!centered){hold_x=(curve.max_x+curve.min_x)/2-canvas.width/2,hold_y=(curve.max_y+curve.min_y)/2-canvas.height/2;var a=Math.abs((curve.max_x+curve.min_x)/2-hold_x-canvas.width/2)/(canvas.width/2);a+=Math.abs((curve.max_y+curve.min_y)/2-hold_y-canvas.height/2)/(canvas.height/2),a/=2,center&&!centered&&curve_chosen&&.1>=a&&(mid_x-=hold_x,mid_y-=hold_y,centered=!0,restart())}break}curve.create_string(level),count+=1}}function restart(){canvas.width=document.documentElement.clientWidth,canvas.height=document.documentElement.clientHeight,ctx.fillStyle=bg_color,ctx.fillRect(0,0,canvas.width,canvas.height),ctx.strokeStyle=start_color,ctx.translate(.5,.5);for(var t=[],e=0;e<$(".inp").length;e++)t.push($(".inp")[e].value);""!=t[0]&&""!=t[1]&&(speed=parseInt(t[0]),size=t[1],width=t[2],start_angle=parseFloat(t[3]),angle=parseFloat(t[4]),level=parseInt(t[5]),constants=t[6],axiom=t[7],rules=t.slice(8),draw_end=!$("#draw_end").prop("checked"),rainbow=$("#rainbow").prop("checked"),!curve_chosen||curve.size==size&&curve.angle==angle&&curve.level==level&&arraysEqual(curve.rules,rules)&&curve.start_angle==start_angle&&curve.orig_axiom==axiom||(centered=!1),curve_chosen&&curve.level==level&&curve.constants==constants&&arraysEqual(curve.rules,rules)&&curve.draw_end==draw_end&&!curve.random_rules&&curve.orig_axiom==axiom?(curve.reset(),curve.size=size,curve.start_angle=start_angle,curve.angle=angle,curve.x=parseInt(mid_x),curve.y=parseInt(mid_y),curve.curr_angle=start_angle,curve.rainbow=rainbow):(curve=new LSystemConstruct(ctx,constants,axiom,size,start_angle,angle,parseInt(mid_x),parseInt(mid_y),rules,draw_end),curve.rainbow=rainbow,curve.create()),ctx.lineWidth=width,ctx.lineCap="square",start=performance.now(),$("#restart").text("Calculating..."),curve_chosen=!0)}String.prototype.splice=function(t,e,a){return this.slice(0,t)+a+this.slice(t+Math.abs(e))};var curve=null,canvas=null,ctx=null,bg_color="#222",standard_width=$(window).width()/1920;1>standard_width&&(standard_width=1);var start_color="#BBB",examp_constants=["FAB","AB","FAB","AB","F","FA"],examp_axiom=["A","A","FA","A","F","A"],examp_size=[4,4,4,4,4,4],examp_width=[standard_width,standard_width,standard_width,standard_width,standard_width,standard_width],examp_start_angle=[0,-60,0,0,-90,-90],examp_angle=[90,60,90,60,25.7,25],examp_rules=[["F","-BF+AFA+FB-","+AF-BFB-FA+"],["+B-A-B+","-A+B+A-"],["F","A+BF+","-FA-B"],["A-B--B+A++AA+B-","+A-BB--B-A++A+B"],["F[+F]F[-F]F"],["FF","F-[[A]+A]+F[+FA]-A"]],examp_draw_end=[!1,!0,!1,!0,!1,!1],examp_level=[6,6,13,5,6,6],curve_chosen=!1,speed=25,width=standard_width,start_angle=0,draw_end=!1,rainbow=!0,center=!0,centered=!1,count=0,start;$(document).ready(function(){create(),setInterval(update,0)}),$(window).resize(function(){canvas.width=$(window).width(),canvas.height=$(window).height(),ctx.fillStyle=bg_color,ctx.fillRect(0,0,canvas.width,canvas.height),ctx.strokeStyle=start_color,ctx.translate(.5,.5),curve_chosen&&(curve.x=parseInt(mid_x),curve.y=parseInt(mid_y),curve.reset(),centered=!1)});